{"ast":null,"code":"var _jsxFileName = \"/home/konrad/STUDIA_SEM_6/Web-application-development/PROJECT/isel-daw-private/front-endv1/src/component/ProjectComponent.jsx\";\nimport React, { Component } from 'react';\nimport ProjectDataService from '../service/ProjectDataService';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProjectComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      name: ''\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"state id project component\" + this.state.id);\n\n    if (this.state.id == -1) {\n      console.log('JESTEM W IF');\n      return;\n    }\n\n    ProjectDataService.retrieveProject(this.state.id).then(response => this.setState({\n      name: response.data.name\n    }));\n  }\n\n  onSubmit(values) {\n    console.log(values);\n  }\n\n  render() {\n    let {\n      name,\n      id\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          id,\n          name\n        },\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n            clasName: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              clasName: \"form-control\",\n              type: \"text\",\n              name: \"id\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            clasName: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              clasName: \"form-control\",\n              type: \"text\",\n              name: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ProjectComponent;","map":{"version":3,"sources":["/home/konrad/STUDIA_SEM_6/Web-application-development/PROJECT/isel-daw-private/front-endv1/src/component/ProjectComponent.jsx"],"names":["React","Component","ProjectDataService","Formik","Form","Field","ErrorMessage","ProjectComponent","constructor","props","state","id","match","params","name","onSubmit","bind","componentDidMount","console","log","retrieveProject","then","response","setState","data","values","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,kBAAP,MAA+B,+BAA/B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;;;AAEA,MAAMC,gBAAN,SAA+BN,SAA/B,CAAwC;AAEpCO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAW;AACPC,MAAAA,EAAE,EAAE,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBF,EADrB;AAEPG,MAAAA,IAAI,EAAE;AAFC,KAAX;AAKA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AAEH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAA6B,KAAKT,KAAL,CAAWC,EAApD;;AAEA,QAAG,KAAKD,KAAL,CAAWC,EAAX,IAAe,CAAC,CAAnB,EAAqB;AACjBO,MAAAA,OAAO,CAACC,GAAR,CAAa,aAAb;AACA;AACH;;AAEDjB,IAAAA,kBAAkB,CAACkB,eAAnB,CAAmC,KAAKV,KAAL,CAAWC,EAA9C,EACCU,IADD,CACMC,QAAQ,IAAG,KAAKC,QAAL,CAAc;AAC3BT,MAAAA,IAAI,EAAEQ,QAAQ,CAACE,IAAT,CAAcV;AADO,KAAd,CADjB;AAIH;;AAEDC,EAAAA,QAAQ,CAACU,MAAD,EAAS;AACbP,IAAAA,OAAO,CAACC,GAAR,CAAYM,MAAZ;AACH;;AAEDC,EAAAA,MAAM,GAAE;AAEJ,QAAI;AAACZ,MAAAA,IAAD;AAAOH,MAAAA;AAAP,QAAY,KAAKD,KAArB;AACA,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,aAAa,EAAE;AAACC,UAAAA,EAAD;AAAIG,UAAAA;AAAJ,SAAvB;AAAA,kBACML,KAAD,iBACG,QAAC,IAAD;AAAA,kCACI;AAAU,YAAA,QAAQ,EAAC,YAAnB;AAAA,oCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA,QAAC,KAAD;AAAO,cAAA,QAAQ,EAAC,cAAhB;AAA+B,cAAA,IAAI,EAAC,MAApC;AAA2C,cAAA,IAAI,EAAC,IAAhD;AAAqD,cAAA,QAAQ;AAA7D;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAU,YAAA,QAAQ,EAAC,YAAnB;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD;AAAO,cAAA,QAAQ,EAAC,cAAhB;AAA+B,cAAA,IAAI,EAAC,MAApC;AAA2C,cAAA,IAAI,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eASI;AAAQ,YAAA,SAAS,EAAC,iBAAlB;AAAoC,YAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAsBH;;AAzDmC;;AA4DxC,eAAeF,gBAAf","sourcesContent":["import React, { Component } from 'react';\nimport ProjectDataService from '../service/ProjectDataService';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nclass ProjectComponent extends Component{\n\n    constructor(props){\n        super(props)\n\n        this.state={\n            id: this.props.match.params.id,\n            name: ''\n        }\n        \n        this.onSubmit = this.onSubmit.bind(this)\n\n    }\n\n    componentDidMount(){\n        console.log(\"state id project component\"+this.state.id)\n\n        if(this.state.id==-1){\n            console.log( 'JESTEM W IF')\n            return\n        }\n\n        ProjectDataService.retrieveProject(this.state.id)\n        .then(response=> this.setState({\n            name: response.data.name\n        }))\n    }\n\n    onSubmit(values) {\n        console.log(values);\n    }\n\n    render(){\n\n        let {name, id}= this.state \n        return (\n            <div>\n                <h3>Project</h3>\n                <Formik initialValues={{id,name}}>\n                    {(props)=>(\n                        <Form>\n                            <fieldset clasName=\"form-group\">\n                            <label>Id</label>\n                            <Field clasName=\"form-control\" type=\"text\" name=\"id\" disabled />\n                            </fieldset>\n                            <fieldset clasName=\"form-group\">\n                                <label>Name</label>\n                                <Field clasName='form-control' type=\"text\" name=\"name\"/>\n                            </fieldset>\n                            <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n            \n\n        )\n    }\n}\n\nexport default ProjectComponent "]},"metadata":{},"sourceType":"module"}