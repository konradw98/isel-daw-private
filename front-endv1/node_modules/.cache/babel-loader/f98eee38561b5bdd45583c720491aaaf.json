{"ast":null,"code":"var _jsxFileName = \"/home/konrad/STUDIA_SEM_6/Web-application-development/PROJECT/isel-daw-private/front-endv1/src/component/CommentComponent.jsx\";\nimport React, { Component } from 'react';\nimport ProjectDataService from '../service/ProjectDataService';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CommentComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      cid: this.props.match.params.cid,\n      description: '',\n      issue: null\n    }; //this.addIssueClicked = this.addIssueClicked.bind(this)\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.state.id); // eslint-disable-next-line\n\n    if (this.state.id == -1) {\n      return;\n    }\n\n    ProjectDataService.retrieveComment(this.state.id).then(response => this.setState({\n      description: response.data.description,\n      issue: response.data.issue\n    }));\n  }\n\n  onSubmit(values) {\n    console.log(\"onSumbit id=\" + this.state.id);\n    console.log(\"onSumbit description=\" + values.description);\n    console.log(\"onSumbit issue=\" + this.state.issue);\n    let comment = {\n      cid: this.state.id,\n      description: values.description,\n      issue: this.state.issue\n    };\n\n    if (this.state.cid == -1) {\n      ProjectDataService.createComment(comment).then(() => this.props.history.push('/courses'));\n    } else {\n      /*CourseDataService.updateCourse(username, this.state.id, course)\n          .then(() => this.props.history.push('/courses'))*/\n      console.log(\"W IFIE ZLE PRZESZLO\");\n    }\n\n    console.log(\"comment id=\" + comment.cid);\n    console.log(\"comment description=\" + comment.description);\n    console.log(\"comment issue=\" + comment.issue);\n  }\n\n  render() {\n    let {\n      description,\n      id\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            id,\n            description\n          },\n          enableReinitialize: true,\n          onSubmit: this.onSubmit,\n          children: props => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Id\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"id\",\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CommentComponent;","map":{"version":3,"sources":["/home/konrad/STUDIA_SEM_6/Web-application-development/PROJECT/isel-daw-private/front-endv1/src/component/CommentComponent.jsx"],"names":["React","Component","ProjectDataService","Formik","Form","Field","ErrorMessage","CommentComponent","constructor","props","state","id","match","params","cid","description","issue","onSubmit","bind","componentDidMount","console","log","retrieveComment","then","response","setState","data","values","comment","createComment","history","push","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport ProjectDataService from '../service/ProjectDataService';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nclass CommentComponent extends Component{\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            cid: this.props.match.params.cid,\n            description: '',\n            issue:null\n        }\n\n        //this.addIssueClicked = this.addIssueClicked.bind(this)\n        this.onSubmit=this.onSubmit.bind(this)\n\n    }\n\n    componentDidMount() {\n\n        console.log(this.state.id)\n\n        // eslint-disable-next-line\n        if (this.state.id == -1) {\n            return\n        }\n\n        ProjectDataService.retrieveComment(this.state.id)\n            .then(response => this.setState({\n                description: response.data.description,\n                issue: response.data.issue\n            }))\n    }\n\n    onSubmit(values) {\n        console.log(\"onSumbit id=\"+this.state.id)\n        console.log(\"onSumbit description=\"+values.description)\n        console.log(\"onSumbit issue=\"+this.state.issue)\n\n\n        let comment = {\n            cid: this.state.id,\n            description: values.description,\n            issue: this.state.issue\n        }\n\n        if (this.state.cid == -1) {\n            ProjectDataService.createComment(comment)\n                .then(() => this.props.history.push('/courses'))\n        } else {\n            /*CourseDataService.updateCourse(username, this.state.id, course)\n                .then(() => this.props.history.push('/courses'))*/\n                console.log(\"W IFIE ZLE PRZESZLO\")\n        }\n\n        console.log(\"comment id=\"+comment.cid);\n        console.log(\"comment description=\"+comment.description);\n        console.log(\"comment issue=\"+comment.issue);\n\n        \n    }\n\n    render() {\n\n        let { description, id } = this.state\n        return (\n            <div>\n                <h3>Comment</h3>\n                <div className=\"container\">\n                    <Formik\n                        initialValues={{ id, description }}\n                        enableReinitialize={true}\n                        onSubmit={this.onSubmit}\n                    >\n                        {\n                            (props) => (\n                                <Form>\n                                    <fieldset className=\"form-group\">\n                                        <label>Id</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"id\" disabled />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Description</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"description\" />\n                                    </fieldset>\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n    \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CommentComponent"]},"metadata":{},"sourceType":"module"}