{"ast":null,"code":"var _jsxFileName = \"/home/konrad/STUDIA_SEM_6/Web-application-development/PROJECT/isel-daw-private/front-endv1/src/component/IssueComponent.jsx\";\nimport React, { Component } from 'react';\nimport ProjectDataService from '../service/ProjectDataService';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass IssueComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      name: null,\n      description: null,\n      iid: null,\n      project: null,\n      state: null,\n      labels: null\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"JESTEM W DID MOUNT ISSUE COMPONENt\");\n\n    if (this.state.id == -1) {\n      return;\n    }\n\n    ProjectDataService.retrieveIssue(this.state.id).then(response => this.setState({\n      name: response.data.name,\n      description: response.data.description,\n      iid: response.data.iid,\n      project: response.data.project,\n      state: response.data.state,\n      labels: response.data.labels\n    }));\n  }\n\n  onSubmit(values) {\n    let issue = {\n      iid: this.state.id,\n      name: values.name,\n      description: values.description,\n      project: this.state.project,\n      state: values.state,\n      labels: values.labels\n    };\n\n    if (this.state.id === -1) {\n      ProjectDataService.createIssue(issue).then(() => this.history.push(\"/issues/project/\" + this.state.project));\n    } else {\n      ProjectDataService.updateIssue(this.state.id, issue).then(() => this.props.history.push(\"/issues/project/\" + this.state.project));\n    }\n  }\n\n  render() {\n    console.log(\"rendername=\" + this.state.name);\n    console.log(\"renderdescription=\" + this.state.description);\n    console.log(\"renderiid=\" + this.state.iid);\n    console.log(\"render PROJECT ID=\" + this.state.project);\n    let {\n      name,\n      id,\n      description,\n      state,\n      labels\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Issue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            id,\n            name,\n            description,\n            state,\n            labels\n          },\n          onSubmit: this.onSubmit,\n          enableReinitialize: true,\n          validateOnChange: false,\n          validateOnBlur: false,\n          children: props => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Id\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"id\",\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"State\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"state\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Labels\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"labels\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default IssueComponent;","map":{"version":3,"sources":["/home/konrad/STUDIA_SEM_6/Web-application-development/PROJECT/isel-daw-private/front-endv1/src/component/IssueComponent.jsx"],"names":["React","Component","ProjectDataService","Formik","Form","Field","ErrorMessage","IssueComponent","constructor","props","state","id","match","params","name","description","iid","project","labels","onSubmit","bind","componentDidMount","console","log","retrieveIssue","then","response","setState","data","values","issue","createIssue","history","push","updateIssue","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,kBAAP,MAA+B,+BAA/B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;;;AAGA,MAAMC,cAAN,SAA6BN,SAA7B,CAAsC;AAElCO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAW;AACPC,MAAAA,EAAE,EAAE,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBF,EADrB;AAEPG,MAAAA,IAAI,EAAE,IAFC;AAGPC,MAAAA,WAAW,EAAE,IAHN;AAIPC,MAAAA,GAAG,EAAE,IAJE;AAKPC,MAAAA,OAAO,EAAC,IALD;AAMPP,MAAAA,KAAK,EAAC,IANC;AAOPQ,MAAAA,MAAM,EAAC;AAPA,KAAX;AASA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;;AACA,QAAG,KAAKb,KAAL,CAAWC,EAAX,IAAe,CAAC,CAAnB,EAAqB;AACjB;AACH;;AAEDT,IAAAA,kBAAkB,CAACsB,aAAnB,CAAiC,KAAKd,KAAL,CAAWC,EAA5C,EACKc,IADL,CACUC,QAAQ,IAAG,KAAKC,QAAL,CAAc;AAC3Bb,MAAAA,IAAI,EAAEY,QAAQ,CAACE,IAAT,CAAcd,IADO;AAE3BC,MAAAA,WAAW,EAAEW,QAAQ,CAACE,IAAT,CAAcb,WAFA;AAG3BC,MAAAA,GAAG,EAAEU,QAAQ,CAACE,IAAT,CAAcZ,GAHQ;AAI3BC,MAAAA,OAAO,EAACS,QAAQ,CAACE,IAAT,CAAcX,OAJK;AAK3BP,MAAAA,KAAK,EAAEgB,QAAQ,CAACE,IAAT,CAAclB,KALM;AAM3BQ,MAAAA,MAAM,EAAEQ,QAAQ,CAACE,IAAT,CAAcV;AANK,KAAd,CADrB;AAUH;;AAEDC,EAAAA,QAAQ,CAACU,MAAD,EAAS;AACb,QAAIC,KAAK,GAAC;AACNd,MAAAA,GAAG,EAAE,KAAKN,KAAL,CAAWC,EADV;AAENG,MAAAA,IAAI,EAAEe,MAAM,CAACf,IAFP;AAGNC,MAAAA,WAAW,EAAEc,MAAM,CAACd,WAHd;AAINE,MAAAA,OAAO,EAAE,KAAKP,KAAL,CAAWO,OAJd;AAKNP,MAAAA,KAAK,EAAEmB,MAAM,CAACnB,KALR;AAMNQ,MAAAA,MAAM,EAAEW,MAAM,CAACX;AANT,KAAV;;AAQA,QAAG,KAAKR,KAAL,CAAWC,EAAX,KAAgB,CAAC,CAApB,EAAsB;AAClBT,MAAAA,kBAAkB,CAAC6B,WAAnB,CAA+BD,KAA/B,EACCL,IADD,CACM,MAAK,KAAKO,OAAL,CAAaC,IAAb,CAAkB,qBAAmB,KAAKvB,KAAL,CAAWO,OAAhD,CADX;AAEH,KAHD,MAGO;AACHf,MAAAA,kBAAkB,CAACgC,WAAnB,CAA+B,KAAKxB,KAAL,CAAWC,EAA1C,EAA8CmB,KAA9C,EACCL,IADD,CACM,MAAI,KAAKhB,KAAL,CAAWuB,OAAX,CAAmBC,IAAnB,CAAwB,qBAAmB,KAAKvB,KAAL,CAAWO,OAAtD,CADV;AAEH;AACJ;;AAEDkB,EAAAA,MAAM,GAAE;AACJb,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAc,KAAKb,KAAL,CAAWI,IAArC;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAqB,KAAKb,KAAL,CAAWK,WAA5C;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAa,KAAKb,KAAL,CAAWM,GAApC;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAqB,KAAKb,KAAL,CAAWO,OAA5C;AAEA,QAAI;AAACH,MAAAA,IAAD;AAAMH,MAAAA,EAAN;AAASI,MAAAA,WAAT;AAAsBL,MAAAA,KAAtB;AAA4BQ,MAAAA;AAA5B,QAAoC,KAAKR,KAA7C;AAEA,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACI,QAAC,MAAD;AACI,UAAA,aAAa,EAAE;AAAEC,YAAAA,EAAF;AAAKG,YAAAA,IAAL;AAAUC,YAAAA,WAAV;AAAuBL,YAAAA,KAAvB;AAA8BQ,YAAAA;AAA9B,WADnB;AAEI,UAAA,QAAQ,EAAE,KAAKC,QAFnB;AAGI,UAAA,kBAAkB,EAAE,IAHxB;AAII,UAAA,gBAAgB,EAAE,KAJtB;AAKI,UAAA,cAAc,EAAE,KALpB;AAAA,oBAQSV,KAAD,iBACI,QAAC,IAAD;AAAA,oCACI;AAAU,cAAA,SAAS,EAAC,YAApB;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAC,cAAjB;AAAgC,gBAAA,IAAI,EAAC,MAArC;AAA4C,gBAAA,IAAI,EAAC,IAAjD;AAAsD,gBAAA,QAAQ;AAA9D;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAKI;AAAU,cAAA,SAAS,EAAC,YAApB;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAC,cAAjB;AAAgC,gBAAA,IAAI,EAAC,MAArC;AAA4C,gBAAA,IAAI,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eASI;AAAU,cAAA,SAAS,EAAC,YAApB;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAC,cAAjB;AAAgC,gBAAA,IAAI,EAAC,MAArC;AAA4C,gBAAA,IAAI,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ,eAaI;AAAU,cAAA,SAAS,EAAC,YAApB;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAC,cAAjB;AAAgC,gBAAA,IAAI,EAAC,MAArC;AAA4C,gBAAA,IAAI,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ,eAiBI;AAAU,cAAA,SAAS,EAAC,YAApB;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAC,cAAjB;AAAgC,gBAAA,IAAI,EAAC,MAArC;AAA4C,gBAAA,IAAI,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjBJ,eAqBI;AAAQ,cAAA,SAAS,EAAC,iBAAlB;AAAoC,cAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AATZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA0CE;;AAvG4B;;AA0GtC,eAAeF,cAAf","sourcesContent":["import React, {Component} from 'react';\nimport ProjectDataService from '../service/ProjectDataService';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\n\nclass IssueComponent extends Component{\n\n    constructor(props){\n        super(props)\n\n        this.state={\n            id: this.props.match.params.id,\n            name: null,\n            description: null,\n            iid: null,\n            project:null,\n            state:null,\n            labels:null\n        }\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    componentDidMount(){\n        console.log(\"JESTEM W DID MOUNT ISSUE COMPONENt\")\n        if(this.state.id==-1){\n            return\n        }\n\n        ProjectDataService.retrieveIssue(this.state.id)\n            .then(response=> this.setState({\n                name: response.data.name,\n                description: response.data.description,\n                iid: response.data.iid,\n                project:response.data.project,\n                state: response.data.state, \n                labels: response.data.labels\n            }))      \n\n    }\n\n    onSubmit(values) {\n        let issue={\n            iid: this.state.id,\n            name: values.name,\n            description: values.description, \n            project: this.state.project,\n            state: values.state,\n            labels: values.labels\n        }\n        if(this.state.id===-1){\n            ProjectDataService.createIssue(issue)\n            .then(()=> this.history.push(\"/issues/project/\"+this.state.project))\n        } else {\n            ProjectDataService.updateIssue(this.state.id, issue)\n            .then(()=>this.props.history.push(\"/issues/project/\"+this.state.project))\n        }\n    }\n   \n    render(){\n        console.log(\"rendername=\"+this.state.name)\n        console.log(\"renderdescription=\"+this.state.description)\n        console.log(\"renderiid=\"+this.state.iid)\n        console.log(\"render PROJECT ID=\"+this.state.project)\n\n        let {name,id,description, state,labels}=this.state\n\n        return (\n            <div>\n                <h3>Issue</h3>\n                <div className=\"container\">\n                    <Formik\n                        initialValues={{ id,name,description, state, labels }}\n                        onSubmit={this.onSubmit}\n                        enableReinitialize={true}\n                        validateOnChange={false}\n                        validateOnBlur={false}\n                    >\n                        {\n                            (props) => (\n                                <Form>\n                                    <fieldset className=\"form-group\">\n                                        <label>Id</label>\n                                        <Field className=\"form-control\" type=\"text\" name='id' disabled />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Name</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"name\" />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Description</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"description\" />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>State</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"state\" />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Labels</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"labels\" />\n                                    </fieldset>\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n    \n                </div>\n            </div>\n        )}\n}\n\nexport default IssueComponent"]},"metadata":{},"sourceType":"module"}